{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tatsuro\\\\movie-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  });\n\n  const getData = async (filterBy, filterValue) => {\n    let res = await axios.get(apiUrl);\n    console.log(res.data);\n    var genre = [];\n    var year = [];\n    var results = [];\n\n    for (var row of res.data) {\n      if (genre.indexOf(row.genre) === -1) {\n        genre.push(row.genre);\n      }\n\n      if (year.indexOf(row.productionYear) === -1) {\n        year.push(row.productionYear);\n      }\n    }\n\n    genre.sort();\n    year.sort();\n\n    if (filterBy === \"productionYear\") {\n      console.log(\"entered filterby prodYears\");\n\n      for (var row of res.data) {\n        if (row.productionYear == filterValue) {\n          results.push(row);\n        }\n      }\n\n      console.log(results);\n      setState({\n        results: results,\n        genre: state.genre,\n        year: state.year,\n        filterBy: state.filterBy,\n        filterValue: filterValue\n      });\n      console.log(state);\n    } else if (filterBy === \"genre\") {\n      console.log(\"entered filterby genre\");\n\n      for (var row of res.data) {\n        if (row.genre === filterValue) {\n          results.push(row);\n        }\n      }\n\n      setState({\n        results: results,\n        genre: state.genre,\n        year: state.year,\n        filterBy: state.filterBy,\n        filterValue: filterValue\n      });\n      console.log(state);\n    } else {\n      console.log(\"entered else\");\n      results = res.data;\n      setState({\n        results: results,\n        genre: genre,\n        year: year\n      });\n    }\n  };\n\n  useEffect(() => {\n    console.log(state);\n\n    if (state.results.length == 0) {\n      console.log(\"results==0\");\n      getData();\n    }\n  });\n\n  const search2 = e => {\n    console.log(\"entered search\");\n    setState({\n      results: [],\n      genre: state.genre,\n      year: state.year,\n      filterBy: state.filterBy\n    });\n    let filterValue = e.target.value;\n    getData(state.filterBy, filterValue);\n  };\n\n  const handleFilter = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n  };\n\n  const handleFilter2 = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }\n  }, \"Movies\")), /*#__PURE__*/React.createElement(Filter, {\n    handleInput: handleFilter,\n    handleInput2: handleFilter2,\n    filterBy: state.filterBy,\n    search2: search2,\n    years: state.year,\n    genres: state.genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Results, {\n    results: state.results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tatsuro/movie-app/src/App.js"],"names":["React","useEffect","useState","axios","Filter","Results","App","apiUrl","state","setState","filterBy","filter","results","selected","genre","year","getData","filterValue","res","get","console","log","data","row","indexOf","push","productionYear","sort","length","search2","e","target","value","handleFilter","prevState","handleFilter2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  })\n\n  const getData = async (filterBy, filterValue) => {\n    let res = await axios.get(apiUrl);\n    console.log(res.data);\n    var genre = [];\n    var year = [];\n    var results = [];\n    for (var row of res.data) {\n      if (genre.indexOf(row.genre) === -1) {\n        genre.push(row.genre);\n      }\n      if (year.indexOf(row.productionYear) === -1) {\n        year.push(row.productionYear);\n      }\n    }\n\n    genre.sort();\n    year.sort();\n\n    if (filterBy === \"productionYear\") {\n      console.log(\"entered filterby prodYears\")\n      for (var row of res.data)  {\n        if (row.productionYear == filterValue) {\n          results.push(row);\n        }\n      }\n      console.log(results)\n      setState({\n        results: results,\n        genre:state.genre,\n        year:state.year,\n        filterBy:state.filterBy,\n        filterValue:filterValue\n      })\n      console.log(state)\n    }\n    else if (filterBy === \"genre\") {\n      console.log(\"entered filterby genre\")\n      for (var row of res.data)  {\n        if (row.genre === filterValue) {\n          results.push(row);\n        }\n      }\n      setState({\n        results: results,\n        genre:state.genre,\n        year:state.year,\n        filterBy:state.filterBy,\n        filterValue:filterValue\n      })\n      console.log(state)\n    }\n    else {\n      console.log(\"entered else\")\n      results = res.data\n      setState({\n        results: results,\n        genre:genre,\n        year:year\n      })\n    }\n}\n\nuseEffect(() => {\n  console.log(state)\n  if(state.results.length==0){\n    console.log(\"results==0\")\n    getData();\n  }\n})\n\nconst search2 = (e) => {\n  console.log(\"entered search\");  \n  setState({\n    results: [],\n    genre:state.genre,\n    year:state.year,\n    filterBy:state.filterBy\n  })\n  let filterValue = e.target.value;\n  getData(state.filterBy, filterValue);\n}\n\nconst handleFilter = (e) => {\n  let filterBy = e.target.value;\n\n  setState(prevState => {\n    return { ...prevState, filterBy: filterBy }\n  });\n}\n\nconst handleFilter2 = (e) => {\n  let filterBy = e.target.value;\n\n  setState(prevState => {\n    return { ...prevState, filterBy: filterBy }\n  });\n}\n\nreturn (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Movies</h1>\n    </header>\n    <Filter handleInput={handleFilter} handleInput2={handleFilter2} filterBy={state.filterBy} search2={search2} years={state.year} genres={state.genre}></Filter>\n    <Results results={state.results} />\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}