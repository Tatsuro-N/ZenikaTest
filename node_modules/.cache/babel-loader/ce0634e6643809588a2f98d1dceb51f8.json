{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tatsuro\\\\movie-app\\\\src\\\\component\\\\Main.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './Filter';\nimport Results from './Results';\n\nfunction Main() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    message: \"Getting movies info, please wait\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  });\n\n  const filter = e => {\n    setState(prevState => {\n      return { ...prevState,\n        message: \"Getting movies info, please wait\"\n      };\n    });\n    let filterValue = e.target.value;\n    getData(state.filterBy, filterValue);\n  };\n\n  const handleFilter = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n  };\n\n  const getData = async (filterBy, filterValue) => {\n    try {\n      let res = await axios.get(apiUrl);\n      var genre = [];\n      var year = [];\n      var results = [];\n\n      for (var row of res.data) {\n        if (genre.indexOf(row.genre) === -1) {\n          genre.push(row.genre);\n        }\n\n        if (year.indexOf(row.productionYear) === -1) {\n          year.push(row.productionYear);\n        }\n      }\n\n      genre.sort();\n      year.sort();\n\n      if (filterBy === \"productionYear\") {\n        for (var row of res.data) {\n          if (row.productionYear == filterValue) {\n            results.push(row);\n          }\n        }\n\n        setState(prevState => {\n          return { ...prevState,\n            results: results,\n            filterValue: filterValue,\n            message: \"\"\n          };\n        });\n      } else if (filterBy === \"genre\") {\n        for (var row of res.data) {\n          if (row.genre === filterValue) {\n            results.push(row);\n          }\n        }\n\n        setState(prevState => {\n          return { ...prevState,\n            results: results,\n            filterValue: filterValue,\n            message: \"\"\n          };\n        });\n      } else {\n        results = res.data;\n        setState({\n          results: results,\n          genre: genre,\n          year: year,\n          message: \"\"\n        });\n      }\n    } catch (e) {\n      getData(filterBy, filterValue);\n    }\n  };\n\n  useEffect(() => {\n    if (state.results.length == 0) {\n      getData();\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 17\n    }\n  }, \"Movies\")), /*#__PURE__*/React.createElement(Filter, {\n    handleFilter: handleFilter,\n    filterBy: state.filterBy,\n    filter: filter,\n    years: state.year,\n    genres: state.genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Results, {\n    results: state.results,\n    message: state.message,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }));\n}\n\nexport default Main;","map":{"version":3,"sources":["C:/Users/Tatsuro/movie-app/src/component/Main.js"],"names":["React","useEffect","useState","axios","Filter","Results","Main","apiUrl","state","setState","filterBy","filter","message","results","selected","genre","year","e","prevState","filterValue","target","value","getData","handleFilter","res","get","row","data","indexOf","push","productionYear","sort","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './App.css';\r\n\r\nimport Filter from './Filter';\r\nimport Results from './Results';\r\n\r\nfunction Main() {\r\n    const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\r\n\r\n    const [state, setState] = useState({\r\n        filterBy: \"\",\r\n        filter: \"\",\r\n        message: \"Getting movies info, please wait\",\r\n        results: [],\r\n        selected: {},\r\n        genre: [],\r\n        year: []\r\n    })\r\n\r\n    const filter = (e) => {\r\n        setState(prevState => {\r\n            return { ...prevState, message: \"Getting movies info, please wait\" }\r\n        });\r\n        let filterValue = e.target.value;\r\n        getData(state.filterBy, filterValue);\r\n    }\r\n\r\n    const handleFilter = (e) => {\r\n        let filterBy = e.target.value;\r\n\r\n        setState(prevState => {\r\n            return { ...prevState, filterBy: filterBy }\r\n        });\r\n    }\r\n\r\n    const getData = async (filterBy, filterValue) => {\r\n        try {\r\n            let res = await axios.get(apiUrl);\r\n            var genre = [];\r\n            var year = [];\r\n            var results = [];\r\n            for (var row of res.data) {\r\n                if (genre.indexOf(row.genre) === -1) {\r\n                    genre.push(row.genre);\r\n                }\r\n                if (year.indexOf(row.productionYear) === -1) {\r\n                    year.push(row.productionYear);\r\n                }\r\n            }\r\n\r\n            genre.sort();\r\n            year.sort();\r\n\r\n            if (filterBy === \"productionYear\") {\r\n                for (var row of res.data) {\r\n                    if (row.productionYear == filterValue) {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        results: results,\r\n                        filterValue: filterValue,\r\n                        message: \"\"\r\n                    }\r\n                })\r\n            }\r\n            else if (filterBy === \"genre\") {\r\n                for (var row of res.data) {\r\n                    if (row.genre === filterValue) {\r\n                        results.push(row);\r\n                    }\r\n                }\r\n                setState(prevState => {\r\n                    return {\r\n                        ...prevState,\r\n                        results: results,\r\n                        filterValue: filterValue,\r\n                        message: \"\"\r\n                    }\r\n                })\r\n            }\r\n            else {\r\n                results = res.data\r\n                setState({\r\n                    results: results,\r\n                    genre: genre,\r\n                    year: year,\r\n                    message: \"\"\r\n                })\r\n            }\r\n        } catch (e) {\r\n            getData(filterBy, filterValue);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        if (state.results.length == 0) {\r\n            getData();\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <header className=\"App-header\">\r\n                <h1>Movies</h1>\r\n            </header>\r\n            <Filter handleFilter={handleFilter} filterBy={state.filterBy} filter={filter} years={state.year} genres={state.genre}></Filter>\r\n            <Results results={state.results} message={state.message} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n"]},"metadata":{},"sourceType":"module"}