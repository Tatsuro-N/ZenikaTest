{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tatsuro\\\\movie-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  });\n\n  const getData = async (filterBy, filterValue) => {\n    let results = await axios.get(apiUrl);\n    console.log(results);\n    var genre = [];\n    var year = []; // var results = [];\n\n    results.map(result => {\n      if (genre.indexOf(result.genre) === -1) {\n        genre.push(result.genre);\n      }\n\n      if (year.indexOf(result.productionYear) === -1) {\n        year.push(result.productionYear);\n      }\n    });\n    genre.sort();\n    year.sort();\n    console.log(genre); // axios(apiUrl).then(({data})=>{\n    //   var genre=[];\n    //   var year=[];\n    //   var results=[];\n    //   data.map((row)=>{\n    //     if(genre.indexOf(row.genre)===-1){\n    //       genre.push(row.genre);\n    //     }\n    //     if(year.indexOf(row.productionYear)===-1){\n    //       year.push(row.productionYear);\n    //     }\n    //   })\n    //   genre.sort();\n    //   year.sort();\n    //   if(filterBy===\"productionYear\"){\n    //     console.log(\"entered filterby prodYears\")\n    //     data.map((row)=>{\n    //       if(row.productionYear==filterValue){\n    //         results.push(row);\n    //       }\n    //     })      \n    //     console.log(results)\n    //     setState({\n    //       results:results,\n    //       genre:genre,\n    //       year:year\n    //     })\n    //   }\n    //   else if(filterBy===\"genre\"){\n    //     data.map((row)=>{\n    //       if(row.genre===filterValue){\n    //         results.push(row);\n    //       }\n    //     })     \n    //     setState({\n    //       results:results,\n    //       genre:genre,\n    //       year:year\n    //     })\n    //   }\n    //   else{\n    //     results=data\n    //   }\n    //   state.results=results;\n    //   state.genre=genre;\n    //   state.year=year;\n    // })\n  };\n\n  useEffect(() => {\n    console.log(state.results); // try{\n    //   console.log(\"Trying\");\n\n    getData(); //   if(state.results.length==0){      \n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n    // }catch(e){\n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n  });\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      getData();\n    }\n  };\n\n  const search2 = e => {\n    console.log(\"entered\");\n    let filterValue = e.target.value;\n    getData(state.filterBy, filterValue);\n  };\n\n  const handleFilter = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n  };\n\n  const handleFilter2 = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n    console.log(state);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }\n  }, \"Movies\")), /*#__PURE__*/React.createElement(Filter, {\n    handleInput: handleFilter,\n    handleInput2: handleFilter2,\n    filterBy: state.filterBy,\n    search: search,\n    search2: search2,\n    years: state.year,\n    genres: state.genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(Results, {\n    results: state.results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 5\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tatsuro/movie-app/src/App.js"],"names":["React","useEffect","useState","axios","Filter","Results","App","apiUrl","state","setState","filterBy","filter","results","selected","genre","year","getData","filterValue","get","console","log","map","result","indexOf","push","productionYear","sort","search","e","key","search2","target","value","handleFilter","prevState","handleFilter2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  })\n\n  const getData = async (filterBy, filterValue) => {\n    let results = await axios.get(apiUrl);\n    console.log(results);\n    var genre = [];\n    var year = [];\n    // var results = [];\n    results.map((result) => {\n      if (genre.indexOf(result.genre) === -1) {\n        genre.push(result.genre);\n      }\n      if (year.indexOf(result.productionYear) === -1) {\n        year.push(result.productionYear);\n      }\n    })\n\n    genre.sort();\n    year.sort();\n\n    console.log(genre);\n  // axios(apiUrl).then(({data})=>{\n  //   var genre=[];\n  //   var year=[];\n  //   var results=[];\n  //   data.map((row)=>{\n  //     if(genre.indexOf(row.genre)===-1){\n  //       genre.push(row.genre);\n  //     }\n  //     if(year.indexOf(row.productionYear)===-1){\n  //       year.push(row.productionYear);\n  //     }\n  //   })\n\n  //   genre.sort();\n  //   year.sort();\n\n  //   if(filterBy===\"productionYear\"){\n  //     console.log(\"entered filterby prodYears\")\n  //     data.map((row)=>{\n  //       if(row.productionYear==filterValue){\n  //         results.push(row);\n  //       }\n  //     })      \n  //     console.log(results)\n  //     setState({\n  //       results:results,\n  //       genre:genre,\n  //       year:year\n  //     })\n  //   }\n  //   else if(filterBy===\"genre\"){\n  //     data.map((row)=>{\n  //       if(row.genre===filterValue){\n  //         results.push(row);\n  //       }\n  //     })     \n  //     setState({\n  //       results:results,\n  //       genre:genre,\n  //       year:year\n  //     })\n  //   }\n  //   else{\n  //     results=data\n  //   }\n\n\n  //   state.results=results;\n  //   state.genre=genre;\n  //   state.year=year;\n  // })\n}\n\nuseEffect(() => {\n  console.log(state.results)\n  // try{\n  //   console.log(\"Trying\");\n  getData();\n  //   if(state.results.length==0){      \n  //   console.log(\"results is empty\")\n  //   while(state.results.length==0){\n  //     console.log(\"trying in catch\")\n  //     getData();\n  //   }\n  // }\n  // }catch(e){\n  //   console.log(\"results is empty\")\n  //   while(state.results.length==0){\n  //     console.log(\"trying in catch\")\n  //     getData();\n  //   }\n  // }\n})\n\nconst search = (e) => {\n  if (e.key === \"Enter\") {\n    getData();\n  }\n}\n\nconst search2 = (e) => {\n  console.log(\"entered\");\n  let filterValue = e.target.value;\n  getData(state.filterBy, filterValue);\n}\n\nconst handleFilter = (e) => {\n  let filterBy = e.target.value;\n\n  setState(prevState => {\n    return { ...prevState, filterBy: filterBy }\n  });\n}\n\nconst handleFilter2 = (e) => {\n  let filterBy = e.target.value;\n\n  setState(prevState => {\n    return { ...prevState, filterBy: filterBy }\n  });\n  console.log(state)\n}\n\nreturn (\n  <div className=\"App\">\n    <header className=\"App-header\">\n      <h1>Movies</h1>\n    </header>\n    <Filter handleInput={handleFilter} handleInput2={handleFilter2} filterBy={state.filterBy} search={search} search2={search2} years={state.year} genres={state.genre}></Filter>\n    <Results results={state.results} />\n  </div>\n);\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}