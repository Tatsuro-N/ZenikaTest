{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tatsuro\\\\movie-app\\\\src\\\\App.js\";\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  });\n\n  const getData = async (filterBy, filterValue) => {\n    let result = await axios.get(apiUrl).then(({\n      data\n    }) => {\n      var genre = [];\n      var year = [];\n      var results = [];\n      data.map(row => {\n        if (genre.indexOf(row.genre) === -1) {\n          genre.push(row.genre);\n        }\n\n        if (year.indexOf(row.productionYear) === -1) {\n          year.push(row.productionYear);\n        }\n      });\n      genre.sort();\n      year.sort();\n\n      if (filterBy === \"productionYear\") {\n        console.log(\"entered filterby prodYears\");\n        data.map(row => {\n          if (row.productionYear == filterValue) {\n            results.push(row);\n          }\n        });\n        console.log(results);\n        setState({\n          results: results,\n          genre: genre,\n          year: year\n        });\n      } else if (filterBy === \"genre\") {\n        data.map(row => {\n          if (row.genre === filterValue) {\n            results.push(row);\n          }\n        });\n        setState({\n          results: results,\n          genre: genre,\n          year: year\n        });\n      } else {\n        results = data;\n      }\n\n      state.results = results;\n      state.genre = genre;\n      state.year = year;\n    });\n    console.log(result);\n  };\n\n  useEffect(() => {\n    console.log(state.results); // try{\n    //   console.log(\"Trying\");\n\n    getData(); //   if(state.results.length==0){      \n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n    // }catch(e){\n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n  });\n\n  const search = e => {\n    if (e.key === \"Enter\") {\n      getData();\n    }\n  };\n\n  const search2 = e => {\n    console.log(\"entered\");\n    let filterValue = e.target.value;\n    getData(state.filterBy, filterValue);\n  };\n\n  const handleFilter = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n  };\n\n  const handleFilter2 = e => {\n    let filterBy = e.target.value;\n    setState(prevState => {\n      return { ...prevState,\n        filterBy: filterBy\n      };\n    });\n    console.log(state);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 9\n    }\n  }, \"Movies\")), /*#__PURE__*/React.createElement(Filter, {\n    handleInput: handleFilter,\n    handleInput2: handleFilter2,\n    filterBy: state.filterBy,\n    search: search,\n    search2: search2,\n    years: state.year,\n    genres: state.genre,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Results, {\n    results: state.results,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/Tatsuro/movie-app/src/App.js"],"names":["React","useEffect","useState","axios","Filter","Results","App","apiUrl","state","setState","filterBy","filter","results","selected","genre","year","getData","filterValue","result","get","then","data","map","row","indexOf","push","productionYear","sort","console","log","search","e","key","search2","target","value","handleFilter","prevState","handleFilter2"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nimport Filter from './component/Filter';\nimport Results from './component/Results';\n\nfunction App() {\n  const apiUrl = \"https://sometimes-maybe-flaky-api.gdshive.io/\";\n\n  const [state, setState] = useState({\n    filterBy: \"\",\n    filter: \"\",\n    results: [],\n    selected: {},\n    genre: [],\n    year: []\n  })\n\n  const getData = async (filterBy, filterValue) => {\n    let result = await axios.get(apiUrl).then(({ data }) => {\n      var genre = [];\n      var year = [];\n      var results = [];\n      data.map((row) => {\n        if (genre.indexOf(row.genre) === -1) {\n          genre.push(row.genre);\n        }\n        if (year.indexOf(row.productionYear) === -1) {\n          year.push(row.productionYear);\n        }\n      })\n\n      genre.sort();\n      year.sort();\n\n      if (filterBy === \"productionYear\") {\n        console.log(\"entered filterby prodYears\")\n        data.map((row) => {\n          if (row.productionYear == filterValue) {\n            results.push(row);\n          }\n        })\n        console.log(results)\n        setState({\n          results: results,\n          genre: genre,\n          year: year\n        })\n      }\n      else if (filterBy === \"genre\") {\n        data.map((row) => {\n          if (row.genre === filterValue) {\n            results.push(row);\n          }\n        })\n        setState({\n          results: results,\n          genre: genre,\n          year: year\n        })\n      }\n      else {\n        results = data\n      }\n\n\n      state.results = results;\n      state.genre = genre;\n      state.year = year;\n    })\n    console.log(result)\n  }\n\n  useEffect(() => {\n    console.log(state.results)\n    // try{\n    //   console.log(\"Trying\");\n    getData();\n    //   if(state.results.length==0){      \n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n    // }catch(e){\n    //   console.log(\"results is empty\")\n    //   while(state.results.length==0){\n    //     console.log(\"trying in catch\")\n    //     getData();\n    //   }\n    // }\n  })\n\n  const search = (e) => {\n    if (e.key === \"Enter\") {\n      getData();\n    }\n  }\n\n  const search2 = (e) => {\n    console.log(\"entered\");\n    let filterValue = e.target.value;\n    getData(state.filterBy, filterValue);\n  }\n\n  const handleFilter = (e) => {\n    let filterBy = e.target.value;\n\n    setState(prevState => {\n      return { ...prevState, filterBy: filterBy }\n    });\n  }\n\n  const handleFilter2 = (e) => {\n    let filterBy = e.target.value;\n\n    setState(prevState => {\n      return { ...prevState, filterBy: filterBy }\n    });\n    console.log(state)\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Movies</h1>\n      </header>\n      <Filter handleInput={handleFilter} handleInput2={handleFilter2} filterBy={state.filterBy} search={search} search2={search2} years={state.year} genres={state.genre}></Filter>\n      <Results results={state.results} />\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}